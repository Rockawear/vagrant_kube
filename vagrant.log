Bringing machine 'cp1' up with 'virtualbox' provider...
Bringing machine 'node1' up with 'virtualbox' provider...
Bringing machine 'node2' up with 'virtualbox' provider...
Bringing machine 'node3' up with 'virtualbox' provider...
==> cp1: Importing base box 'bento/ubuntu-18.04'...
[KProgress: 10%[KProgress: 20%[KProgress: 30%[KProgress: 40%[KProgress: 70%[KProgress: 80%[KProgress: 90%[K==> cp1: Matching MAC address for NAT networking...
==> cp1: Checking if box 'bento/ubuntu-18.04' version '202012.21.0' is up to date...
==> cp1: Setting the name of the VM: kube_cp1_1619892992852_16997
==> cp1: Clearing any previously set network interfaces...
==> cp1: Preparing network interfaces based on configuration...
    cp1: Adapter 1: nat
    cp1: Adapter 2: hostonly
==> cp1: Forwarding ports...
    cp1: 22 (guest) => 2222 (host) (adapter 1)
==> cp1: Running 'pre-boot' VM customizations...
==> cp1: Booting VM...
==> cp1: Waiting for machine to boot. This may take a few minutes...
    cp1: SSH address: 127.0.0.1:2222
    cp1: SSH username: vagrant
    cp1: SSH auth method: private key
    cp1: 
    cp1: Vagrant insecure key detected. Vagrant will automatically replace
    cp1: this with a newly generated keypair for better security.
    cp1: 
    cp1: Inserting generated public key within guest...
    cp1: Removing insecure key from the guest if it's present...
    cp1: Key inserted! Disconnecting and reconnecting using new SSH key...
==> cp1: Machine booted and ready!
==> cp1: Checking for guest additions in VM...
==> cp1: Setting hostname...
==> cp1: Configuring and enabling network interfaces...
==> cp1: Mounting shared folders...
    cp1: /vagrant => /home/ro/tools/vms/kube
==> node1: Importing base box 'bento/ubuntu-18.04'...
[KProgress: 10%[KProgress: 20%[KProgress: 30%[KProgress: 40%[KProgress: 50%[KProgress: 70%[KProgress: 80%[KProgress: 90%[K==> node1: Matching MAC address for NAT networking...
==> node1: Checking if box 'bento/ubuntu-18.04' version '202012.21.0' is up to date...
==> node1: Setting the name of the VM: kube_node1_1619893032677_26029
==> node1: Fixed port collision for 22 => 2222. Now on port 2200.
==> node1: Clearing any previously set network interfaces...
==> node1: Preparing network interfaces based on configuration...
    node1: Adapter 1: nat
    node1: Adapter 2: hostonly
==> node1: Forwarding ports...
    node1: 22 (guest) => 2200 (host) (adapter 1)
==> node1: Running 'pre-boot' VM customizations...
==> node1: Booting VM...
==> node1: Waiting for machine to boot. This may take a few minutes...
    node1: SSH address: 127.0.0.1:2200
    node1: SSH username: vagrant
    node1: SSH auth method: private key
    node1: 
    node1: Vagrant insecure key detected. Vagrant will automatically replace
    node1: this with a newly generated keypair for better security.
    node1: 
    node1: Inserting generated public key within guest...
    node1: Removing insecure key from the guest if it's present...
    node1: Key inserted! Disconnecting and reconnecting using new SSH key...
==> node1: Machine booted and ready!
==> node1: Checking for guest additions in VM...
==> node1: Setting hostname...
==> node1: Configuring and enabling network interfaces...
==> node1: Mounting shared folders...
    node1: /vagrant => /home/ro/tools/vms/kube
==> node2: Importing base box 'bento/ubuntu-18.04'...
[KProgress: 10%[KProgress: 20%[KProgress: 30%[KProgress: 40%[KProgress: 70%[KProgress: 80%[KProgress: 90%[K==> node2: Matching MAC address for NAT networking...
==> node2: Checking if box 'bento/ubuntu-18.04' version '202012.21.0' is up to date...
==> node2: Setting the name of the VM: kube_node2_1619893073167_9571
==> node2: Fixed port collision for 22 => 2222. Now on port 2201.
==> node2: Clearing any previously set network interfaces...
==> node2: Preparing network interfaces based on configuration...
    node2: Adapter 1: nat
    node2: Adapter 2: hostonly
==> node2: Forwarding ports...
    node2: 22 (guest) => 2201 (host) (adapter 1)
==> node2: Running 'pre-boot' VM customizations...
==> node2: Booting VM...
==> node2: Waiting for machine to boot. This may take a few minutes...
    node2: SSH address: 127.0.0.1:2201
    node2: SSH username: vagrant
    node2: SSH auth method: private key
==> node2: Waiting for cleanup before exiting...
